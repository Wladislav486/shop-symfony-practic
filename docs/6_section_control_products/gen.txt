037 Страница всех продуктов
- Добавляем подпункты меню в раздел products в админке
1 добавим контроллер, в котором реализуем crud для продуктов
2 создадим вёрстку для списка товаров

038 Страница редактирования продукта
1 реализуем в экшене логику валидации формы и обновления продукта/
подключение представления страницы редактирования продукта
2 реализуем вёрстку формы


039 Первая загрузка изображения
1 Создаём таблицу для хранения данных изображений
2 добавляем поле в форму
3 Проверяем получение файла в контроллере

040 Сохранение изображения
Необходимо реализовать следующую логику:
1 Вынести логику обработки форм в отдельный сервис/класс
app/src/Form/Handler/ProductFormHandler.php
- чтобы не создавать огромный контроллер
- вся логика сохранения изображения будет хранится в нём
2 Сохранить изменения продукта
3 Сохранить файл во временной папке
4 Сохранить изображение продукту
- получить путь к папке хранения изображений продукта
- работа с ProductImage
     - задать размеры картинке(типы размеров: big, middle, small)
     - сохранить изображения в папку
     - создать productImage и возврнуть его продукту
- сохранить привязку продукта к картинке, на уровне записей в таблицах

041 Классы FileSaver и FileSystemWorker
1 Реализовано перемещение файла, при изменении/добавлении нового товара через админку, из временной папки в нами указанную.
2 Добавлена настройка и внедрена как зависимость, хранящая путь до папки файлов.
3 Реализован метод для создания директории, если она отсуствет в соответствующем классе.
4 Реализован метод, сохраняющий файл по указанному пути и модифицирующий название в уникальное

042 Класс ProductManager
1 Создали класс/сервис для работы с сущностью Продукта
2 Вынесли путь до папки изображений продукта в настройки, внедрили настройку в сервис как зависимость
3 Вынесли логику сущности в сервис, например сохранение сущности


043 Класс ProductImageManager
1 Создали менеджера для работы с сущностью ProductImage.
В которую будет писаться путь до картинок продукта разного разрешения.
2 Сформировали настройки для картинок.
3 Внедрили зависимости необходимые для работы логики сущности.


044 Класс ImageResizer. Используем Imagine
1 Добавили библиотеку композера для работы с изображениями
sudo composer require imagine/imagine:1.2
2 Реализовали метод по созданию изображений продукта в нескольких разрешениях
И сохранение путей до этих изображений в сущность ProductImage


045 Вывод изображений
1 Получили элементы связной сущности продукта ProductImage для шаблона списка товаров и изменения одного товара.
2 Внедрили данные в вёрстку шаблонов соответствующих страниц.

046 Удаление изображений
1 Создаём контроллер для взаимодействия с сущностью ProductImage
2 Добавляем экшен, где происходит удаление объекта сущности ProductImage и изображений привязанных к нему.

047 Удаление продукта
1 Реализовали экшен в контроллере продукта - удаление товара

048 Создание продукта. Рефакторинг шаблона
1 Вынесем некоторые части шаблона edit.html.twig в отдельный файлы
- admin/_embed/_card/_breadcrumbs.html.twig
- admin/_embed/_utils/_modal.html.twig
- admin/_embed/_card/_form_buttons.html.twig
2 Добавим создание нового объекта в экшене добавления/изменения продукта
3 При создании продукта сохраним продукт перед формированием директории изображений продукта


049 Отображение валюты
1 Установим расширение композер для работы с валютой
composer require twig/intl-extra
2 Воспользовались фун-алом расширения в шаблоне списка продуктов list.html.twig


050 Используем Sluggable
1 Сгенерировали поле Product slug из консоли
symfony console make:entity Product
2 Создали миграцию
symfony console make:migration
3 Добавили поле в таблицу
symfony console doctrine:migrations:migrate
4 Установим расширение composer для формирования slug
sudo composer require stof/doctrine-extensions-bundle ^1.6.*
- версию взял из видео
- файл с настройками нужно пересоздать из локалки, прав на редактирование нехватает если он создан автоматически из контейнера
5 Добавим анотацию в классе модели полю slug